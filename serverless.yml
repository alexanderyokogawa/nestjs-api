service:
  name: nest-service

plugins:
  - serverless-offline-sqs
  - serverless-plugin-typescript
  - serverless-plugin-optimize
  - serverless-offline

custom:
  stage: ${opt:stage, 'local'}
  region: ${self:custom.config.deploy.region}
  accountId: ${self:custom.config.deploy.accountId}

  # Load config
  config: ${file(./config/config.yml):${self:custom.stage}, file(./config/config.yml):local}
  apiGateway: ${file(./config/config.yml):apiGateway.${self:custom.stage}}

  serverless-offline:
    host: 0.0.0.0
    serverPort: ${env:API_PORT, 4000}

  serverless-offline-sqs:
    autoCreate: true
    skipCacheInvalidation: false
    apiVersion: "2012-11-05"
    endpoint: http://${env:SQS_HOST, "localhost"}:${env:SQS_PORT, 9324}
    region: us-east-1

  tags:
    Service: ${self:service}
    Product: tripws
    Team: platform

  basePath: ''

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${self:custom.stage}
  region: ${self:custom.region}
  endpointType: regional

  apiName: ${self:service}
  stackName: ${self:service}-${self:custom.stage}
  deploymentBucket:
    name: ${self:custom.config.deploy.deploymentBucket}
    maxPreviousDeploymentArtifacts: ${self:custom.config.deploy.pruneVersion}
    blockPublicAccess: true
  deploymentPrefix: ${self:custom.config.deploy.deploymentPrefix}

  memorySize: 128
  timeout: 30
  versionFunctions: true
  logRetentionInDays: 1

  iamRoleStatements: ${file(./config/iam-roles.yml):default}
  environment: ${file(./environments.yml):${self:custom.stage}, file(./environments.yml):default}

functions: ${file(./functions.yml)}

resources:
  - ${file(./resources/queue-user.sqs.yml)}

package:
  individually: true
  excludeDevDependencies: true
  exclude:
    - README.md
    - .serverless/**
    - .webpack/**
    - test/**

frameworkVersion: ">=2"
